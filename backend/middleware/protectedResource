// Import the jwt module to handle JSON Web Tokens
const jwt = require("jsonwebtoken");

// Import JWT_SECRET from the config file
const { JWT_SECRET } = require('../config');


// Import mongoose to interact with MongoDB
const mongoose = require("mongoose");

// Import the UserModel schema
const UserModel = mongoose.model("UserModel");


// Middleware function to check if the user is logged in
module.exports = (req, res, next) => {

    // Extract the authorization header from the request
    const { authorization } = req.headers;

    // If authorization header is not present, return a 401 status with an error message
    if (!authorization) {
        return res.status(401).json({ error: "User not logged in" });
    }

    // Extract the token from the authorization header
    const token = authorization.replace("Bearer ", "");

    // Verify the token using the JWT_SECRET
    jwt.verify(token, JWT_SECRET, (error, payload) => {
        if (error) {
            return res.status(401).json({ error: "User not logged in" });
        }

        // Extract the user ID from the token payload
        const { _id } = payload;

        // Find the user in the database by their ID
        UserModel.findById(_id)
            .then((dbUser) => {
                req.user = dbUser;
                next();
            })
    });
}